{"version":3,"file":"static/js/491.b29f2db8.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","serviceAPI/fetch.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  margin-bottom: 15px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n  }),\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FirstWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n\nexport const MainInfo = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 950px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Addition = styled.div`\n  @media screen and (min-width: 950px) {\n    margin-left: 30px;\n  }\n`;\n\nexport const Poster = styled.img`\n  border-radius: 7px;\n  max-width: 520px;\n  max-height: 300px;\n  @media screen and (min-width: 950px) {\n    margin: auto;\n  }\n`;\n\nexport const MainText = styled.div`\n  @media screen and (min-width: 950px) {\n    margin-left: 30px;\n  }\n`;\n\nexport const AdditionsUl = styled.ul`\n  margin-bottom: 10px;\n`;\nexport const AdditionsLi = styled.li`\n  list-style: circle;\n  margin-bottom: 10px;\n  font-size: 18px;\n  a {\n    text-decoration: underline dotted;\n    color: #7c5400;\n  }\n`;\nexport const Genres = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 0;\n`;\nexport const Genre = styled.li`\n  list-style: none;\n  padding: 0 6px 0 0;\n  :not(:last-child) {\n    border-right: 1px solid grey;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { getMovieById, STATUS } from 'serviceAPI/fetch';\n\nimport {\n  FirstWrapper,\n  MainInfo,\n  Poster,\n  MainText,\n  Addition,\n  AdditionsLi,\n  AdditionsUl,\n  Genres,\n  Genre,\n} from './MovieDetails.styled';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [status, setStatus] = useState(STATUS.idle);\n  const [movie, setMovie] = useState({\n    backdrop_path: null,\n    id: 0,\n    poster_path: null,\n    title: '',\n    original_title: '',\n    release_date: '',\n    vote_average: 0,\n    vote_count: 0,\n    overview: '',\n    genres: [{ id: 0, name: '' }],\n  });\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setStatus(STATUS.pending);\n    async function fetchData() {\n      try {\n        const objectOfMovie = await getMovieById(id).then(r => r);\n\n        setMovie(objectOfMovie);\n        setStatus(STATUS.resolved);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.rejected);\n      }\n    }\n    fetchData();\n  }, [id]);\n  const location = useLocation();\n\n  const backLink = () => {\n    if (location.state === null) {\n      return { pathname: '/', search: '' };\n    }\n    if (location.state.from.state === null) {\n      const locationSearch =\n        location.state.from.state === null\n          ? location.state.from.search\n          : location.state.from.state.from.search;\n\n      const backLinkHrefSearch =\n        location.pathname === '/movies' ||\n        `/movies/${id}` ||\n        `/movies/${id}/cast` ||\n        `/movies/${id}/reviews`\n          ? {\n              locationSearch,\n            } ?? '/movies'\n          : location.state?.from ?? '/';\n\n      const pathname =\n        location.state.from.state === null\n          ? location.state.from.pathname\n          : location.state.from.state.from.pathname;\n\n      const backLinkHrefPathname = pathname === '/' ? '/' : '/movies';\n      return {\n        pathname: backLinkHrefPathname,\n        search: backLinkHrefSearch.locationSearch,\n      };\n    }\n    if (location.state.from.state.from.state === null) {\n      const locationSearch =\n        location.state.from.state.from.state === null\n          ? location.state.from.state.from.search\n          : location.state.from.state.from.state.from.search;\n\n      const backLinkHrefSearch =\n        location.pathname === '/movies' ||\n        `/movies/${id}` ||\n        `/movies/${id}/cast` ||\n        `/movies/${id}/reviews`\n          ? {\n              locationSearch,\n            } ?? '/movies'\n          : location.state?.from ?? '/';\n\n      const pathname =\n        location.state.from.state.from.state === null\n          ? location.state.from.state.from.pathname\n          : location.state.from.state.from.state.from.pathname;\n\n      const backLinkHrefPathname = pathname === '/' ? '/' : '/movies';\n\n      return {\n        pathname: backLinkHrefPathname,\n        search: backLinkHrefSearch.locationSearch,\n      };\n    }\n    if (location.state.from.state.from.state.from.state === null) {\n      const locationSearch =\n        location.state.from.state.from.state.from.state === null\n          ? location.state.from.state.from.state.from.search\n          : location.state.from.state.from.state.from.state.from.search;\n\n      const backLinkHrefSearch =\n        location.pathname === '/movies' ||\n        `/movies/${id}` ||\n        `/movies/${id}/cast` ||\n        `/movies/${id}/reviews`\n          ? {\n              locationSearch,\n            } ?? '/movies'\n          : location.state?.from ?? '/';\n\n      const pathname =\n        location.state.from.state.from.state.from.state === null\n          ? location.state.from.state.from.state.from.pathname\n          : location.state.from.state.from.state.from.state.from.pathname;\n\n      const backLinkHrefPathname = pathname === '/' ? '/' : '/movies';\n\n      return {\n        pathname: backLinkHrefPathname,\n        search: backLinkHrefSearch.locationSearch,\n      };\n    }\n  };\n\n  return (\n    <>\n      {status === STATUS.resolved && (\n        <>\n          <BackLink to={backLink()}>Back to movies</BackLink>\n          <FirstWrapper>\n            <MainInfo>\n              {movie.backdrop_path !== null ? (\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                  alt={movie.title}\n                />\n              ) : (\n                <Poster\n                  src={\n                    'https://fisnikde.com/wp-content/uploads/2019/01/broken-image.png'\n                  }\n                  alt={movie.title}\n                />\n              )}\n              <MainText>\n                {movie.release_date !== '' ? (\n                  <h1>\n                    {movie.original_title} ({movie.release_date.slice(0, 4)})\n                  </h1>\n                ) : (\n                  <h1>{movie.original_title}</h1>\n                )}\n                <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <Genres>\n                  {movie.genres.map(genre => (\n                    <Genre key={genre.id}> {genre.name}</Genre>\n                  ))}\n                </Genres>\n              </MainText>\n            </MainInfo>\n            <Addition>\n              <h3>Additional information</h3>\n              <AdditionsUl>\n                <AdditionsLi>\n                  <Link to=\"cast\" state={{ from: location }}>\n                    Cast\n                  </Link>\n                </AdditionsLi>\n                <AdditionsLi>\n                  <Link to=\"reviews\" state={{ from: location }}>\n                    Reviews\n                  </Link>\n                </AdditionsLi>\n              </AdditionsUl>\n            </Addition>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </FirstWrapper>\n        </>\n      )}\n      {status === STATUS.rejected && (\n        <h3>Something went wrong on API... The messege error `{error}`</h3>\n      )}\n      {status === STATUS.pending && (\n        <h3>Please wait, information is loading...</h3>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '78844696e6f21da4f5b43c08b71ce0bd';\n\nexport async function getTrending(page) {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.json();\n}\nexport const getMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieCastById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport async function getSearchByKeyWord(query, page) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n\n  return response.json();\n}\n\nexport const STATUS = {\n  idle: 'idle',\n  pending: 'pending',\n  rejected: 'rejected',\n  resolved: 'resolved',\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","FirstWrapper","MainInfo","Addition","Poster","MainText","AdditionsUl","AdditionsLi","Genres","Genre","useState","STATUS","status","setStatus","backdrop_path","id","poster_path","title","original_title","release_date","vote_average","vote_count","overview","genres","name","movie","setMovie","error","setError","useParams","useEffect","getMovieById","then","r","objectOfMovie","fetchData","location","useLocation","state","pathname","search","from","locationSearch","backLinkHrefSearch","backLink","src","alt","slice","Math","round","map","genre","Suspense","fallback","BASE_URL","API_KEY","getTrending","page","fetch","response","json","movieId","getMovieCastById","getMovieReviewsById","getSearchByKeyWord","query","idle","pending","rejected","resolved"],"sourceRoot":""}